[user]
	email = my@email.fr
	name = myname
[color]
        branch = auto
        ui = true
[core]
        editor = vi
        #editor = "subl -n -w"
        ## autocrlf = input
[alias]
        ## working on commits
        # commit to previous commit
        caa = commit -a --amend -C HEAD
        ci = commit
        co = checkout
        cp = cherry-pick
        dc = diff --cached
        fix = caa
        lg = log --graph --abbrev-commit --decorate --format=format:'%C(yellow)%h%C(reset) %C(normal)%s%C(reset) %C(dim white)%an%C(reset) %C(cyan)(%ar)%C(reset) %C(auto)%d%C(reset)'
        lgp = log --graph --abbrev-commit --decorate --format=format:'%C(yellow)%h%C(reset) %C(normal)%s%C(reset) %C(dim white)%an%C(reset) %C(cyan)(%ar)%C(reset) %C(auto)%d%C(reset)' --first-parent
        rb = rebase
        rba = rebase --abort
        rbi = rebase -i
        rbc = rebase --continue
        rbs = rebase --skip

        ##Â working on branches
        br = branch
        bn = "!git rev-parse --abbrev-ref HEAD"         # branche name
        clean-merged = !git branch --merged \
                        | grep -v \"\\*\" \
                        | xargs -n 1 git branch -d
        publish = "!git push -u origin $(git bn)"       # set upstream and push
        ## alternative to pull.rebase = true
        # pullr = pull --rebase
        pushf = push --force
        sync = rebase origin/develop
        unpublish = "!git push origin :$(git bn)"       # delete remote
        whatsnew = "!git diff origin/$(git bn)...HEAD"
        whatscoming = "!git diff HEAD...origin/$(git bn)"

        # misc
        rz = reset --hard
        rza = !git reset --hard HEAD && git clean -df
        st = status
[pull]
        rebase = true
[push]
        default = simple
[fetch]
        prune = true
